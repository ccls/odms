#
#	crontab some_crontab_text_file.txt
#		will overwrite the entire existing crontab setup.
#
#	crontab -e 
#		will open up an editor
#
#	crontab -l
#		will display the crontab file
#
#	* * * * * Command to be executed
#	- - - - -
#	| | | | |
#	| | | | +----- Day of week (0-6)
#	| | | +------- Month (1 - 12)
#	| | +--------- Day of month (1 - 31)
#	| +----------- Hour (0 - 23)
#	+------------- Min (0 - 59)
#
#
# @monthly        Run once a month, "0 0 1 * *".
# @weekly         Run once a week, "0 0 * * 0".
# @daily          Run once a day, "0 0 * * *".
#
#
#
#
#
#	Which shell?	Setting must include path apparently
SHELL=/bin/tcsh
#
#	To what is RAILS_ENV set?	seems unset (is set in .tcshrc so if tcsh is shell is set)
#	Could also explicitly set it
RAILS_ENV=production
#
#
#	Without setting mail will be stored locally on this computer.
#	I think setting MAILTO='' will stop it from being sent.
#	Could also set the ~/.forward file to this as well.
#MAILTO='jakewendt@berkeley.edu'
#	apparently genepi1 isn't set to send external email
#
#   ----- The following addresses had permanent fatal errors -----
#<jakewendt@berkeley.edu>
#    (reason: 550-Verification failed for <jwendt@localhost.localdomain>)
#
#
#	Can I have a series of commands in crontab, or should I put it all in one script.
#	Yes.  Either way.  Seems that everything after the time designation is executed
#


#
#	Dump significant tables to xml.
#
#	According to Yang, this is not being and has never been used.
#@daily cd /my/ruby/odms/ ; rake app:data:export_to_xml >> /my/ruby/logs/export_to_xml.log



#
#	Try to import the latest icf_master_tracker file
#
#	every WEEKday at 8PM
#	Changed mounting using fstab (more unixy).  Should never lose mount now.
#	Also, fyi "abort" calls from rake task will send email.
0 20 * * 1,2,3,4,5 cd /my/ruby/odms/ ; rake automate:updates_from_icf_master_tracker >> /my/ruby/logs/automate_updates_from_icf_master_tracker.log


#
#	import bc_info data
#	Every Wednesday at 7PM
#
0 19 * * 3 cd /my/ruby/odms/ ; rake automate:import_screening_data >> /my/ruby/logs/automate_import_screening_data.log


#	
#	Add daily mysql_dump
#	Add weekly mysql_dump
#	Add monthly mysql_dump
#
# @monthly        Run once a month, "0 0 1 * *".
# @weekly         Run once a week, "0 0 * * 0".
# @daily          Run once a day, "0 0 * * *".



